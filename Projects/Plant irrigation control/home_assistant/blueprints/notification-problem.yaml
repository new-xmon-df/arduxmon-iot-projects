blueprint:
  name: Need for watering plants.
  description: Send notifications when any of the plants in an area of the house need watering.
  domain: automation
  author: Arduxmon
  input:
    time:
      name: Execution time
      description: The time at which the automation will run.
      default: '18:00:00'
      selector:
        time: { }
    area:
      name: Área
      description: El área donde están las plantas
      selector:
        area:
    mobile_devices:
      name: Dispositivos móviles
      description: Los dispositivos móviles a los que se enviará la notificación
      selector:
        target:
          entity:
            domain: device_tracker
    alexa_device:
      name: Dispositivo Alexa
      description: El dispositivo Alexa que dará la notificación
      selector:
        entity:
          domain: media_player

variables:
  low_moisture_plants: []

trigger:
  platform: time
  at: !input 'time'

action:
  - variables:
      low_moisture_plants: "{{ expand('area.' ~ area.entity_id) | selectattr('entity_id', 'in', state_attr(area.entity_id, 'entity_id')) | map(attribute='name') | list }}"
      #low_moisture_plants: "{{ states | select('match', '^plant\\..*') | selectattr('attributes.area', 'eq', area) | selectattr('attributes.moisture', 'eq', 'low') | map(attribute='entity_id') | list }}"
  - condition: template
    value_template: "{{ low_moisture_plants | count > 0 }}"
  - choose:
      - conditions: "{{ states[mobile_devices] | selectattr('state', 'eq', 'home') | list | count > 0 }}"
        sequence:
          - service: notify.{{ alexa_device }}
            data:
              message: "La humedad de la planta es baja"
  - service: notify.mobile_app_{{ mobile_devices }}
    data:
      message: "La humedad de la planta es baja"
